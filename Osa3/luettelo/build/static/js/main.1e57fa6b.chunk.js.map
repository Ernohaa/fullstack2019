{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/personservice.js","App.js","serviceWorker.js","index.js"],"names":["Person","_ref","henkilo","remove","react_default","a","createElement","name","number","onClick","id","Filter","value","changeHandler","onChange","PersonForm","nameHandler","numberHandler","submitHandler","type","baseUrl","personservice","axios","get","then","response","data","personObject","post","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newSearch","setNewSearch","_useState9","_useState10","newMessage","setNewMessage","_useState11","_useState12","removeName","setRemoveName","useEffect","InitialPersons","removePerson","filter","p","map","window","confirm","setTimeout","catch","error","personToShow","person","toLowerCase","includes","message","className","_ref2","components_Filter","event","target","components_PersonForm","preventDefault","paivitettava","find","returned","length","console","log","components_Person","key","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e57fa6b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ henkilo, remove }) => {\r\n    return (\r\n      <li>{henkilo.name} {henkilo.number} <button onClick={()=>remove(henkilo.id)}>Delete</button></li>   \r\n    )\r\n  }\r\n  \r\n  export default Person","import React from 'react'\r\n\r\nconst Filter = ({value, changeHandler}) => {\r\n    return (<div>\r\n        Rajaa näytettäviä: <input value={value} onChange={changeHandler}/>\r\n    </div>)\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({name, nameHandler, number, numberHandler, submitHandler}) => {\r\n\r\n  return (\r\n      <form>\r\n          <h2>Lisää uusi</h2>\r\n          <div>\r\n              nimi: <input value={name} onChange={nameHandler}/>\r\n          </div>\r\n          <div>\r\n              numero: <input value={number} onChange={numberHandler}/>\r\n          </div>\r\n          <div>\r\n              <button type=\"submit\" onClick={submitHandler}>lisää</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\n  export default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = personObject => {\r\n  const request = axios.post(baseUrl, personObject)\r\n  return request.then(response => response.data)\r\n  }\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n  \r\nconst update = (id, personObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, personObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  export default { \r\n    getAll: getAll, \r\n    create: create, \r\n    update: update,\r\n    remove: remove\r\n  }","import Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport React, { useState, useEffect } from 'react'\nimport personservice from './services/personservice'\n\nconst App = () => {\n\n  const [persons,setPersons] = useState([]) \n  const [newName,setNewName ] = useState('')\n  const [newNumber,setNewNumber]=useState('')\n  const [newSearch,setNewSearch]=useState('')\n  const [newMessage, setNewMessage] = useState(null)\n  const [removeName,setRemoveName] = useState(null)\n\n  useEffect(() => {\n    personservice.getAll()\n      .then(InitialPersons => {\n        setPersons(InitialPersons)\n      })\n  }, [])\n\n\n  const Notification = ({message}) => {\n    if (message===null){\n      return null\n    }\n    return (\n      <div className=\"newperson\">\n        {message}\n      </div>\n    )\n  }\n\n  const Removal = ({error}) => {\n    if (error===null){\n      return null\n    }\n    return (\n      <div className=\"removeperson\">\n        {error}\n      </div>\n    )\n  }\n  \n\n  const addPerson = (event)=>{\n    event.preventDefault()\n\n    const personObject = {\n      name : newName,\n      number: newNumber\n    }\n\n    if (persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())){\n      if (window.confirm(`${newName} on jo luettelossa, päivitetäänkö numero?`)){\n        const paivitettava = persons.find(person => person.name === newName)\n        paivitettava.number = newNumber\n        personservice.update(paivitettava.id,paivitettava)\n        .then(returned => {\n          setPersons(persons.map(person => person.id !== returned.id ? person : returned))\n          setNewMessage(`${newName} numero päivitettiin`)\n          setTimeout(() => {\n            setNewMessage(null)\n          }, 5000)\n      })\n      .catch(error => {\n          setRemoveName(\n            \"VIRHE VIRHE VIRHE\"\n          )\n          setTimeout(() => {\n            setRemoveName(null)\n          }, 5000)\n      })\n      }\n    }else{\n\n      personservice.create(personObject)\n      .then(response => {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewNumber('')\n        setNewMessage(`lisätty ${newName}`)\n        setTimeout(() => {\n          setNewMessage(null)\n        }, 5000)\n      }).catch(error =>{\n        if(newName.length<3){\n          console.log(`name: ${newName} is shorter than the minimum allowed length (3)`)\n          setRemoveName(`name: ${newName} is shorter than the minimum allowed length (3)`)\n          setTimeout(() => {\n            setRemoveName(null)\n          }, 5000)\n        }else if (newNumber.length<8){\n          console.log(`number: ${newNumber} is shorter than the minimum allowed length (8)`)\n          setRemoveName(`number: ${newNumber} is shorter than the minimum allowed length (8)`)       \n          setTimeout(() => {\n            setRemoveName(null)\n          }, 5000)}\n      })\n    }\n  }\n        \n    \n    \n  \n  const removePerson = (id) => {\n    const name = persons.filter(p => p.id === id).map(p => p.name)\n    if (window.confirm(`Poistetaanko ${name}?`)) {\n      personservice.remove(id)\n      .then(() => {\n          setPersons(persons.filter((p) => p.id !== id))\n          setRemoveName(`${name} poistettiin`)\n          setTimeout(() => {\n            setRemoveName(null)\n          }, 5000)\n      })\n      .catch(error => {\n          setRemoveName(\n            \"VIRHE POISTETTAESSA HENKILÖÄ\"\n          )\n          setTimeout(() => {\n            setRemoveName(null)\n          }, 5000)\n      })\n      }\n    }\n\n\n  const rows = () => personToShow.map(person =>\n    <Person\n      key={person.id}\n      henkilo={person}\n      remove={removePerson}\n    />\n  )\n  \n  const personToShow = persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event)=>{  \n    setNewSearch(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <Notification message={newMessage}/>\n      <Removal error={removeName}/>\n      <h2>Puhelinluettelo</h2>\n\n      <Filter value={newSearch} changeHandler={handleSearchChange}/>\n          \n      <PersonForm name={newName} nameHandler={handleNameChange}\n                        number={newNumber} numberHandler={handleNumberChange}\n                        submitHandler={addPerson}/>    \n      <h2>Numerot</h2>\n      <ul>\n        {rows()}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}